# Maintainer: Simone De Gregori <orion@runeaudio.com>

_cfgdir=/etc/nginx
_tmpdir=/run
pkgname=nginx-rune
#pkgver=1.12.2
#pkgver=1.14.2
pkgver=1.16.1
pkgrel=1
pkgdesc="NGiNX HTTP server (RuneAudio PushStream)"
arch=('i686' 'x86_64' 'armv6h' 'armv7h' 'aarch64')
depends=('pcre' 'zlib' 'apr-util')
makedepends=('git')
url="http://nginx.org"
license=('custom')
conflicts=('nginx')
provides=('nginx')

source=("http://nginx.org/download/nginx-${pkgver}.tar.gz"
        'service'
        'nginx.logrotate'
        'nginx-prod.conf')

sha256sums=('SKIP'
            '11dde3df4ef501b84a7a8610628dd4865ff535ebb5d9e7467fd8c5ea3e45b6f2'
            'a493c299218ff4ef84447cce4efc3271a4517510ccf071c5e6efe97c47394750'
            '1f3efb93a0dfe643ed2de0dcc0b11c425fc44127603660d6ace63e60b479c664')

build() {
	cd "${srcdir}"
	msg "Fetching nginx-push-stream-module"
	_modules=(${_modules[@]} --add-module=../nginx-push-stream-module)
	if [ -d nginx-push-stream-module ]; then
            pushd nginx-push-stream-module
            git pull
            popd
        else
	    git clone https://github.com/wandenberg/nginx-push-stream-module.git
	fi

	cd "${srcdir}/nginx-${pkgver}"
	msg "Building nginx"

	CFLAGS="-I /usr/include/httpd -I /usr/include/apr-1" ./configure \
        --prefix=${_cfgdir} \
        --conf-path=${_cfgdir}/nginx.conf \
        --sbin-path=/usr/bin/nginx \
        --pid-path=/var/run/nginx.pid \
        --lock-path=/var/lock/nginx.lock \
        --user=http --group=http \
        --http-log-path=/var/log/runeaudio/ui.log \
        --error-log-path=/var/log/runeaudio/ui_error.log \
        --http-client-body-temp-path=${_tmpdir}/client-body \
        --http-proxy-temp-path=${_tmpdir}/proxy \
        --http-fastcgi-temp-path=${_tmpdir}/fastcgi \
        --http-scgi-temp-path=${_tmpdir}/scgi \
        --http-uwsgi-temp-path=${_tmpdir}/uwsgi \
        --with-http_gzip_static_module \
        --with-http_stub_status_module \
        --with-http_ssl_module \
        --without-mail_pop3_module \
        --without-mail_imap_module \
        --without-mail_smtp_module \
        --without-http_charset_module \
        --without-http_ssi_module \
        --without-http_userid_module \
        --without-http_access_module \
        --without-http_auth_basic_module \
        --without-http_autoindex_module \
        --without-http_geo_module \
        --without-http_map_module \
        --without-http_split_clients_module \
        --without-http_referer_module \
        --without-http_uwsgi_module \
        --without-http_scgi_module \
        --without-http_memcached_module \
        --without-http_limit_conn_module \
        --without-http_limit_req_module \
        --without-http_empty_gif_module \
        --without-http_browser_module \
        --without-http_upstream_ip_hash_module \
        --without-http_upstream_least_conn_module \
        --without-http_upstream_keepalive_module \
        ${_modules[@]} 
        make -j4
}

#        --with-file-aio \

package() {
	cd "${srcdir}/nginx-${pkgver}"
	make -j4 DESTDIR="${pkgdir}" install
	rm "${pkgdir}"/etc/nginx/*.default
	rm "${pkgdir}"/etc/nginx/nginx.conf
	install -Dm644 "${srcdir}"/nginx-prod.conf "${pkgdir}"/etc/nginx/nginx-prod.conf
	install -d "${pkgdir}"/usr/share/nginx
	mv "${pkgdir}"/etc/nginx/html/ "${pkgdir}"/usr/share/nginx
	install -Dm644 "${srcdir}"/nginx.logrotate "${pkgdir}"/etc/logrotate.d/nginx
	install -Dm644 "${srcdir}"/service "${pkgdir}"/usr/lib/systemd/system/nginx.service
	rm -rf "${pkgdir}"/var/run
}
